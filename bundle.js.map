{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://fpy-example/./src/css/style.css","webpack://fpy-example/./node_modules/css-loader/dist/runtime/api.js","webpack://fpy-example/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://fpy-example/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://fpy-example/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://fpy-example/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://fpy-example/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://fpy-example/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://fpy-example/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://fpy-example/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://fpy-example/webpack/bootstrap","webpack://fpy-example/webpack/runtime/compat get default export","webpack://fpy-example/webpack/runtime/define property getters","webpack://fpy-example/webpack/runtime/global","webpack://fpy-example/webpack/runtime/hasOwnProperty shorthand","webpack://fpy-example/webpack/runtime/publicPath","webpack://fpy-example/webpack/runtime/jsonp chunk loading","webpack://fpy-example/webpack/runtime/nonce","webpack://fpy-example/./src/css/style.css?9fcd","webpack://fpy-example/./src/js/utils.js","webpack://fpy-example/./src/js/GamePlay.js","webpack://fpy-example/./src/js/GameState.js","webpack://fpy-example/./src/js/themes.js","webpack://fpy-example/./src/js/generators.js","webpack://fpy-example/./src/js/Character.js","webpack://fpy-example/./src/js/PositionedCharacter.js","webpack://fpy-example/./src/js/cursors.js","webpack://fpy-example/./src/js/characters/Bowman.js","webpack://fpy-example/./src/js/characters/Swordsman.js","webpack://fpy-example/./src/js/characters/Magician.js","webpack://fpy-example/./src/js/characters/Vampire.js","webpack://fpy-example/./src/js/characters/Undead.js","webpack://fpy-example/./src/js/characters/Daemon.js","webpack://fpy-example/./src/js/GameController.js","webpack://fpy-example/./src/js/app.js","webpack://fpy-example/./src/js/GameStateService.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../img/prairie/map-tile-top-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../img/prairie/map-tile-top.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"../img/prairie/map-tile-top-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(\"../img/prairie/map-tile-bottom-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_4___ = new URL(\"../img/prairie/map-tile-bottom.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_5___ = new URL(\"../img/prairie/map-tile-bottom-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_6___ = new URL(\"../img/prairie/map-tile-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_7___ = new URL(\"../img/prairie/map-tile-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_8___ = new URL(\"../img/prairie/map-tile-center.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_9___ = new URL(\"../img/desert/map-tile-top-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_10___ = new URL(\"../img/desert/map-tile-top.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_11___ = new URL(\"../img/desert/map-tile-top-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_12___ = new URL(\"../img/desert/map-tile-bottom-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_13___ = new URL(\"../img/desert/map-tile-bottom.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_14___ = new URL(\"../img/desert/map-tile-bottom-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_15___ = new URL(\"../img/desert/map-tile-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_16___ = new URL(\"../img/desert/map-tile-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_17___ = new URL(\"../img/desert/map-tile-center.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_18___ = new URL(\"../img/arctic/map-tile-top-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_19___ = new URL(\"../img/arctic/map-tile-top.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_20___ = new URL(\"../img/arctic/map-tile-top-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_21___ = new URL(\"../img/arctic/map-tile-bottom-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_22___ = new URL(\"../img/arctic/map-tile-bottom.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_23___ = new URL(\"../img/arctic/map-tile-bottom-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_24___ = new URL(\"../img/arctic/map-tile-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_25___ = new URL(\"../img/arctic/map-tile-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_26___ = new URL(\"../img/arctic/map-tile-center.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_27___ = new URL(\"../img/mountain/map-tile-top-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_28___ = new URL(\"../img/mountain/map-tile-top.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_29___ = new URL(\"../img/mountain/map-tile-top-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_30___ = new URL(\"../img/mountain/map-tile-bottom-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_31___ = new URL(\"../img/mountain/map-tile-bottom.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_32___ = new URL(\"../img/mountain/map-tile-bottom-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_33___ = new URL(\"../img/mountain/map-tile-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_34___ = new URL(\"../img/mountain/map-tile-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_35___ = new URL(\"../img/mountain/map-tile-center.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_36___ = new URL(\"../img/characters/generic.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_37___ = new URL(\"../img/characters/bowman.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_38___ = new URL(\"../img/characters/daemon.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_39___ = new URL(\"../img/characters/magician.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_40___ = new URL(\"../img/characters/swordsman.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_41___ = new URL(\"../img/characters/undead.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_42___ = new URL(\"../img/characters/vampire.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_43___ = new URL(\"../img/characters/zombie.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_5___);\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_6___);\nvar ___CSS_LOADER_URL_REPLACEMENT_7___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_7___);\nvar ___CSS_LOADER_URL_REPLACEMENT_8___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_8___);\nvar ___CSS_LOADER_URL_REPLACEMENT_9___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_9___);\nvar ___CSS_LOADER_URL_REPLACEMENT_10___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_10___);\nvar ___CSS_LOADER_URL_REPLACEMENT_11___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_11___);\nvar ___CSS_LOADER_URL_REPLACEMENT_12___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_12___);\nvar ___CSS_LOADER_URL_REPLACEMENT_13___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_13___);\nvar ___CSS_LOADER_URL_REPLACEMENT_14___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_14___);\nvar ___CSS_LOADER_URL_REPLACEMENT_15___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_15___);\nvar ___CSS_LOADER_URL_REPLACEMENT_16___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_16___);\nvar ___CSS_LOADER_URL_REPLACEMENT_17___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_17___);\nvar ___CSS_LOADER_URL_REPLACEMENT_18___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_18___);\nvar ___CSS_LOADER_URL_REPLACEMENT_19___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_19___);\nvar ___CSS_LOADER_URL_REPLACEMENT_20___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_20___);\nvar ___CSS_LOADER_URL_REPLACEMENT_21___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_21___);\nvar ___CSS_LOADER_URL_REPLACEMENT_22___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_22___);\nvar ___CSS_LOADER_URL_REPLACEMENT_23___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_23___);\nvar ___CSS_LOADER_URL_REPLACEMENT_24___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_24___);\nvar ___CSS_LOADER_URL_REPLACEMENT_25___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_25___);\nvar ___CSS_LOADER_URL_REPLACEMENT_26___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_26___);\nvar ___CSS_LOADER_URL_REPLACEMENT_27___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_27___);\nvar ___CSS_LOADER_URL_REPLACEMENT_28___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_28___);\nvar ___CSS_LOADER_URL_REPLACEMENT_29___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_29___);\nvar ___CSS_LOADER_URL_REPLACEMENT_30___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_30___);\nvar ___CSS_LOADER_URL_REPLACEMENT_31___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_31___);\nvar ___CSS_LOADER_URL_REPLACEMENT_32___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_32___);\nvar ___CSS_LOADER_URL_REPLACEMENT_33___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_33___);\nvar ___CSS_LOADER_URL_REPLACEMENT_34___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_34___);\nvar ___CSS_LOADER_URL_REPLACEMENT_35___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_35___);\nvar ___CSS_LOADER_URL_REPLACEMENT_36___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_36___);\nvar ___CSS_LOADER_URL_REPLACEMENT_37___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_37___);\nvar ___CSS_LOADER_URL_REPLACEMENT_38___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_38___);\nvar ___CSS_LOADER_URL_REPLACEMENT_39___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_39___);\nvar ___CSS_LOADER_URL_REPLACEMENT_40___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_40___);\nvar ___CSS_LOADER_URL_REPLACEMENT_41___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_41___);\nvar ___CSS_LOADER_URL_REPLACEMENT_42___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_42___);\nvar ___CSS_LOADER_URL_REPLACEMENT_43___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_43___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n  --cell-size: 64px;\n}\n\nhtml, body {\n  height: 100%;\n  margin: 0;\n}\n\nbody {\n  background: #000;\n  font-size: 16px;\n}\n\n.btn {\n  display: inline-block;\n  font-weight: 400;\n  color: #212529;\n  background-color: #f8f9fa;\n  text-align: center;\n  vertical-align: middle;\n  padding: .375rem .75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  border-radius: .25rem;\n  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n  border: none;\n}\n\n.controls {\n  text-align: center;\n  margin: 50px 0;\n\n  /* добавлено */\n  position: relative;\n  margin-bottom: 20px;\n}\n\n.board-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  grid-column-gap: 2px;\n  grid-row-gap: 2px;\n}\n\n.cell {\n  position: relative;\n}\n\n.cell.selected::before {\n  content: '';\n  display: block;\n  border: 4px;\n  border-radius: 32px;\n  box-sizing: border-box;\n  width: var(--cell-size);\n  height: var(--cell-size);\n  opacity: 0.9;\n  position: absolute;\n}\n\n.cell.selected-yellow::before {\n  border-color: #ff0;\n  border-style: solid;\n}\n\n.cell.selected-green::before {\n  border-color: #0f0;\n  border-style: dashed;\n}\n\n.cell.selected-red::before {\n  border-color: #f00;\n  border-style: dashed;\n}\n\n.board.prairie {\n  --map-tile-top-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n  --map-tile-top-url: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n  --map-tile-top-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_2___});\n  --map-tile-bottom-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_3___});\n  --map-tile-bottom-url: url(${___CSS_LOADER_URL_REPLACEMENT_4___});\n  --map-tile-bottom-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_5___});\n  --map-tile-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_6___});\n  --map-tile-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_7___});\n  --map-tile-center-url: url(${___CSS_LOADER_URL_REPLACEMENT_8___});\n}\n\n.board.desert {\n  --map-tile-top-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_9___});\n  --map-tile-top-url: url(${___CSS_LOADER_URL_REPLACEMENT_10___});\n  --map-tile-top-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_11___});\n  --map-tile-bottom-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_12___});\n  --map-tile-bottom-url: url(${___CSS_LOADER_URL_REPLACEMENT_13___});\n  --map-tile-bottom-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_14___});\n  --map-tile-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_15___});\n  --map-tile-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_16___});\n  --map-tile-center-url: url(${___CSS_LOADER_URL_REPLACEMENT_17___});\n}\n\n.board.arctic {\n  --map-tile-top-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_18___});\n  --map-tile-top-url: url(${___CSS_LOADER_URL_REPLACEMENT_19___});\n  --map-tile-top-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_20___});\n  --map-tile-bottom-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_21___});\n  --map-tile-bottom-url: url(${___CSS_LOADER_URL_REPLACEMENT_22___});\n  --map-tile-bottom-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_23___});\n  --map-tile-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_24___});\n  --map-tile-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_25___});\n  --map-tile-center-url: url(${___CSS_LOADER_URL_REPLACEMENT_26___});\n}\n\n.board.mountain {\n  --map-tile-top-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_27___});\n  --map-tile-top-url: url(${___CSS_LOADER_URL_REPLACEMENT_28___});\n  --map-tile-top-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_29___});\n  --map-tile-bottom-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_30___});\n  --map-tile-bottom-url: url(${___CSS_LOADER_URL_REPLACEMENT_31___});\n  --map-tile-bottom-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_32___});\n  --map-tile-left-url: url(${___CSS_LOADER_URL_REPLACEMENT_33___});\n  --map-tile-right-url: url(${___CSS_LOADER_URL_REPLACEMENT_34___});\n  --map-tile-center-url: url(${___CSS_LOADER_URL_REPLACEMENT_35___});\n}\n\n.map-tile {\n  width: var(--cell-size);\n  height: var(--cell-size);\n}\n\n.map-tile-top-left {\n  background: var(--map-tile-top-left-url);\n}\n\n.map-tile-top {\n  background: var(--map-tile-top-url);\n}\n\n.map-tile-top-right {\n  background: var(--map-tile-top-right-url);\n}\n\n.map-tile-bottom-left {\n  background: var(--map-tile-bottom-left-url);\n}\n\n.map-tile-bottom {\n  background: var(--map-tile-bottom-url);\n}\n\n.map-tile-bottom-right {\n  background: var(--map-tile-bottom-right-url);\n}\n\n.map-tile-left {\n  background: var(--map-tile-left-url);\n}\n\n.map-tile-right {\n  background: var(--map-tile-right-url);\n}\n\n.map-tile-center {\n  background: var(--map-tile-center-url);\n}\n\n.character {\n  width: var(--cell-size);\n  height: var(--cell-size);\n  position: absolute;\n  z-index: 99;\n}\n\n.character.generic {\n  background: url(${___CSS_LOADER_URL_REPLACEMENT_36___});\n}\n\n.character.bowman {\n  background: url(${___CSS_LOADER_URL_REPLACEMENT_37___});\n}\n\n.character.daemon {\n  background: url(${___CSS_LOADER_URL_REPLACEMENT_38___});\n}\n\n.character.magician {\n  background: url(${___CSS_LOADER_URL_REPLACEMENT_39___});\n}\n\n.character.swordsman {\n  background: url(${___CSS_LOADER_URL_REPLACEMENT_40___});\n}\n\n.character.undead {\n  background: url(${___CSS_LOADER_URL_REPLACEMENT_41___});\n}\n\n.character.vampire {\n  background: url(${___CSS_LOADER_URL_REPLACEMENT_42___});\n}\n\n.character.zombie {\n  background: url(${___CSS_LOADER_URL_REPLACEMENT_43___});\n}\n\n.health-level {\n  top: 2px;\n  left: 7px;\n  position: absolute;\n  width: 50px;\n  height: 4px;\n  background: #000;\n}\n\n.health-level-indicator {\n  height: 4px;\n}\n\n.health-level-indicator-high {\n  background: #0f0;\n}\n\n.health-level-indicator-normal {\n  background: #ff0;\n}\n\n.health-level-indicator-critical {\n  background: #f00;\n}\n\n.damage {\n  position: absolute;\n  width: var(--cell-size);\n  text-align: center;\n  z-index: 999;\n  color: #f00;\n  font-weight: bold;\n  animation: 500ms fade ease-out;\n}\n\n@keyframes fade {\n  from {\n    opacity: 0;\n    top: calc(var(--cell-size) * 0.5);\n    font-size: 1rem;\n  }\n  to {\n    opacity: 1;\n    top: -20px;\n    font-size: 1.5rem;\n  }\n}\n\n/* счетчики */\n.score-board {\n  position: fixed;\n  max-width: 400px; /* Максимальная ширина */\n  bottom: 10px; /* Отступ от нижнего края */\n  padding: 10px 20px; /* Внутренние отступы */\n  margin: 20px auto; /* Отступы сверху и центрирование */\n  left: 50%; /* Центрирование */\n  text-align: center; /* Выравнивание текста */\n  background-color: #333333; /* Фоновый цвет */\n  border: 2px solid #ffffff; /* Граница */\n  border-radius: 8px; /* Скругление углов */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3); /* Тень */\n  transform: translateX(-50%);\n  z-index: 100; /* Поверх других элементов */\n  font-size: 1.2rem; /* Размер текста */\n  color: #ffffff; /* Цвет текста */\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root {\\n  --cell-size: 64px;\\n}\\n\\nhtml, body {\\n  height: 100%;\\n  margin: 0;\\n}\\n\\nbody {\\n  background: #000;\\n  font-size: 16px;\\n}\\n\\n.btn {\\n  display: inline-block;\\n  font-weight: 400;\\n  color: #212529;\\n  background-color: #f8f9fa;\\n  text-align: center;\\n  vertical-align: middle;\\n  padding: .375rem .75rem;\\n  font-size: 1rem;\\n  line-height: 1.5;\\n  border-radius: .25rem;\\n  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\\n  border: none;\\n}\\n\\n.controls {\\n  text-align: center;\\n  margin: 50px 0;\\n\\n  /* добавлено */\\n  position: relative;\\n  margin-bottom: 20px;\\n}\\n\\n.board-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-wrap: wrap;\\n}\\n\\n.board {\\n  display: grid;\\n  grid-template-columns: repeat(8, 1fr);\\n  grid-column-gap: 2px;\\n  grid-row-gap: 2px;\\n}\\n\\n.cell {\\n  position: relative;\\n}\\n\\n.cell.selected::before {\\n  content: '';\\n  display: block;\\n  border: 4px;\\n  border-radius: 32px;\\n  box-sizing: border-box;\\n  width: var(--cell-size);\\n  height: var(--cell-size);\\n  opacity: 0.9;\\n  position: absolute;\\n}\\n\\n.cell.selected-yellow::before {\\n  border-color: #ff0;\\n  border-style: solid;\\n}\\n\\n.cell.selected-green::before {\\n  border-color: #0f0;\\n  border-style: dashed;\\n}\\n\\n.cell.selected-red::before {\\n  border-color: #f00;\\n  border-style: dashed;\\n}\\n\\n.board.prairie {\\n  --map-tile-top-left-url: url('../img/prairie/map-tile-top-left.png');\\n  --map-tile-top-url: url('../img/prairie/map-tile-top.png');\\n  --map-tile-top-right-url: url('../img/prairie/map-tile-top-right.png');\\n  --map-tile-bottom-left-url: url('../img/prairie/map-tile-bottom-left.png');\\n  --map-tile-bottom-url: url('../img/prairie/map-tile-bottom.png');\\n  --map-tile-bottom-right-url: url('../img/prairie/map-tile-bottom-right.png');\\n  --map-tile-left-url: url('../img/prairie/map-tile-left.png');\\n  --map-tile-right-url: url('../img/prairie/map-tile-right.png');\\n  --map-tile-center-url: url('../img/prairie/map-tile-center.png');\\n}\\n\\n.board.desert {\\n  --map-tile-top-left-url: url('../img/desert/map-tile-top-left.png');\\n  --map-tile-top-url: url('../img/desert/map-tile-top.png');\\n  --map-tile-top-right-url: url('../img/desert/map-tile-top-right.png');\\n  --map-tile-bottom-left-url: url('../img/desert/map-tile-bottom-left.png');\\n  --map-tile-bottom-url: url('../img/desert/map-tile-bottom.png');\\n  --map-tile-bottom-right-url: url('../img/desert/map-tile-bottom-right.png');\\n  --map-tile-left-url: url('../img/desert/map-tile-left.png');\\n  --map-tile-right-url: url('../img/desert/map-tile-right.png');\\n  --map-tile-center-url: url('../img/desert/map-tile-center.png');\\n}\\n\\n.board.arctic {\\n  --map-tile-top-left-url: url('../img/arctic/map-tile-top-left.png');\\n  --map-tile-top-url: url('../img/arctic/map-tile-top.png');\\n  --map-tile-top-right-url: url('../img/arctic/map-tile-top-right.png');\\n  --map-tile-bottom-left-url: url('../img/arctic/map-tile-bottom-left.png');\\n  --map-tile-bottom-url: url('../img/arctic/map-tile-bottom.png');\\n  --map-tile-bottom-right-url: url('../img/arctic/map-tile-bottom-right.png');\\n  --map-tile-left-url: url('../img/arctic/map-tile-left.png');\\n  --map-tile-right-url: url('../img/arctic/map-tile-right.png');\\n  --map-tile-center-url: url('../img/arctic/map-tile-center.png');\\n}\\n\\n.board.mountain {\\n  --map-tile-top-left-url: url('../img/mountain/map-tile-top-left.png');\\n  --map-tile-top-url: url('../img/mountain/map-tile-top.png');\\n  --map-tile-top-right-url: url('../img/mountain/map-tile-top-right.png');\\n  --map-tile-bottom-left-url: url('../img/mountain/map-tile-bottom-left.png');\\n  --map-tile-bottom-url: url('../img/mountain/map-tile-bottom.png');\\n  --map-tile-bottom-right-url: url('../img/mountain/map-tile-bottom-right.png');\\n  --map-tile-left-url: url('../img/mountain/map-tile-left.png');\\n  --map-tile-right-url: url('../img/mountain/map-tile-right.png');\\n  --map-tile-center-url: url('../img/mountain/map-tile-center.png');\\n}\\n\\n.map-tile {\\n  width: var(--cell-size);\\n  height: var(--cell-size);\\n}\\n\\n.map-tile-top-left {\\n  background: var(--map-tile-top-left-url);\\n}\\n\\n.map-tile-top {\\n  background: var(--map-tile-top-url);\\n}\\n\\n.map-tile-top-right {\\n  background: var(--map-tile-top-right-url);\\n}\\n\\n.map-tile-bottom-left {\\n  background: var(--map-tile-bottom-left-url);\\n}\\n\\n.map-tile-bottom {\\n  background: var(--map-tile-bottom-url);\\n}\\n\\n.map-tile-bottom-right {\\n  background: var(--map-tile-bottom-right-url);\\n}\\n\\n.map-tile-left {\\n  background: var(--map-tile-left-url);\\n}\\n\\n.map-tile-right {\\n  background: var(--map-tile-right-url);\\n}\\n\\n.map-tile-center {\\n  background: var(--map-tile-center-url);\\n}\\n\\n.character {\\n  width: var(--cell-size);\\n  height: var(--cell-size);\\n  position: absolute;\\n  z-index: 99;\\n}\\n\\n.character.generic {\\n  background: url('../img/characters/generic.png');\\n}\\n\\n.character.bowman {\\n  background: url('../img/characters/bowman.png');\\n}\\n\\n.character.daemon {\\n  background: url('../img/characters/daemon.png');\\n}\\n\\n.character.magician {\\n  background: url('../img/characters/magician.png');\\n}\\n\\n.character.swordsman {\\n  background: url('../img/characters/swordsman.png');\\n}\\n\\n.character.undead {\\n  background: url('../img/characters/undead.png');\\n}\\n\\n.character.vampire {\\n  background: url('../img/characters/vampire.png');\\n}\\n\\n.character.zombie {\\n  background: url('../img/characters/zombie.png');\\n}\\n\\n.health-level {\\n  top: 2px;\\n  left: 7px;\\n  position: absolute;\\n  width: 50px;\\n  height: 4px;\\n  background: #000;\\n}\\n\\n.health-level-indicator {\\n  height: 4px;\\n}\\n\\n.health-level-indicator-high {\\n  background: #0f0;\\n}\\n\\n.health-level-indicator-normal {\\n  background: #ff0;\\n}\\n\\n.health-level-indicator-critical {\\n  background: #f00;\\n}\\n\\n.damage {\\n  position: absolute;\\n  width: var(--cell-size);\\n  text-align: center;\\n  z-index: 999;\\n  color: #f00;\\n  font-weight: bold;\\n  animation: 500ms fade ease-out;\\n}\\n\\n@keyframes fade {\\n  from {\\n    opacity: 0;\\n    top: calc(var(--cell-size) * 0.5);\\n    font-size: 1rem;\\n  }\\n  to {\\n    opacity: 1;\\n    top: -20px;\\n    font-size: 1.5rem;\\n  }\\n}\\n\\n/* счетчики */\\n.score-board {\\n  position: fixed;\\n  max-width: 400px; /* Максимальная ширина */\\n  bottom: 10px; /* Отступ от нижнего края */\\n  padding: 10px 20px; /* Внутренние отступы */\\n  margin: 20px auto; /* Отступы сверху и центрирование */\\n  left: 50%; /* Центрирование */\\n  text-align: center; /* Выравнивание текста */\\n  background-color: #333333; /* Фоновый цвет */\\n  border: 2px solid #ffffff; /* Граница */\\n  border-radius: 8px; /* Скругление углов */\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3); /* Тень */\\n  transform: translateX(-50%);\\n  z-index: 100; /* Поверх других элементов */\\n  font-size: 1.2rem; /* Размер текста */\\n  color: #ffffff; /* Цвет текста */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * @todo\n * @param index - индекс поля\n * @param boardSize - размер квадратного поля (в длину или ширину)\n * @returns строка - тип ячейки на поле:\n *\n * top-left\n * top-right\n * top\n * bottom-left\n * bottom-right\n * bottom\n * right\n * left\n * center\n *\n * @example\n * ```js\n * calcTileType(0, 8); // 'top-left'\n * calcTileType(1, 8); // 'top'\n * calcTileType(63, 8); // 'bottom-right'\n * calcTileType(7, 7); // 'left'\n * ```\n * */\nexport function calcTileType(index, boardSize) {\n  // TODO: ваш код будет тут\n  // Для этого в модуле src/js/utils.js допишите реализацию функции calcTileType так, чтобы она возвращала строки:\n  // top-left,top-right,top,bottom-left,bottom-right,bottom,right,left,center\n\n  const totalCells = boardSize ** 2;\n\n  // Верхний ряд\n  if (index === 0) return 'top-left';\n  if (index === boardSize - 1) return 'top-right';\n  if (index < boardSize) return 'top';\n\n  // Нижний ряд\n  if (index === totalCells - boardSize) return 'bottom-left';\n  if (index === totalCells - 1) return 'bottom-right';\n  if (index >= totalCells - boardSize) return 'bottom';\n\n  // Левый и правый столбцы\n  if (index % boardSize === 0) return 'left';\n  if ((index + 1) % boardSize === 0) return 'right';\n\n  // Все остальные ячейки\n  return 'center';\n}\n\nexport function calcHealthLevel(health) {\n  if (health < 15) {\n    return 'critical';\n  }\n\n  if (health < 50) {\n    return 'normal';\n  }\n\n  return 'high';\n}\n","import { calcHealthLevel, calcTileType } from './utils';\n\nexport default class GamePlay {\n  constructor() {\n    this.boardSize = 8;\n    this.container = null;\n    this.boardEl = null;\n    this.cells = [];\n    this.cellClickListeners = [];\n    this.cellEnterListeners = [];\n    this.cellLeaveListeners = [];\n    this.newGameListeners = [];\n    this.saveGameListeners = [];\n    this.loadGameListeners = [];\n  }\n\n  bindToDOM(container) {       // нет ошибки, если app.js нормально выполнил привязку #game-container\n    if (!(container instanceof HTMLElement)) {\n      throw new Error('container is not HTMLElement');\n    }\n    this.container = container;\n  }\n\n  /**\n   * Draws boardEl with specific theme\n   *\n   * @param theme\n   */\n  drawUi(theme) {\n    this.checkBinding();\n\n    this.container.innerHTML = `\n      <div class=\"controls\">\n        <button data-id=\"action-restart\" class=\"btn\">New Game</button>\n        <button data-id=\"action-save\" class=\"btn\">Save Game</button>\n        <button data-id=\"action-load\" class=\"btn\">Load Game</button>\n      </div>\n      <div class=\"board-container\">\n        <div data-id=\"board\" class=\"board\"></div>\n      </div>\n    `;\n\n    this.newGameEl = this.container.querySelector('[data-id=action-restart]');\n    // this.newGameEl = document.querySelector('[data-id=\"action-restart\"]');\n    this.saveGameEl = this.container.querySelector('[data-id=action-save]');\n    this.loadGameEl = this.container.querySelector('[data-id=action-load]');\n\n    // console.log('this.newGameEl, this.saveGameEl, this.loadGameEl:', this.newGameEl, this.saveGameEl, this.loadGameEl);\n\n    this.newGameEl.addEventListener('click', event => this.onNewGameClick(event));\n    this.saveGameEl.addEventListener('click', event => this.onSaveGameClick(event));\n    this.loadGameEl.addEventListener('click', event => this.onLoadGameClick(event));\n\n    this.boardEl = this.container.querySelector('[data-id=board]');\n\n    // добавляем класс c темамой игры к HTML-элементу игрового поля\n    this.boardEl.classList.add(theme);\n\n    // цикл создания ячеек игрового поля\n    for (let i = 0; i < this.boardSize ** 2; i += 1) {\n      const cellEl = document.createElement('div');\n\n      // Добавляются классы для каждой ячейки:\n      // cell — общий класс для всех ячеек, используемый для базовой стилизации,\n      // map-tile — класс для визуального оформления ячейки как части карты,\n      // map-tile-${calcTileType(i, this.boardSize)} — уникальный класс,\n      //   зависящий от положения ячейки на игровом поле, где calcTileType(i, this.boardSize):\n      //   - это вспомогательная функция, которая определяет тип ячейки (угловая, боковая,\n      //     центральная) на основе индекса i и размера поля.\n      cellEl.classList.add('cell', 'map-tile', `map-tile-${calcTileType(i, this.boardSize)}`);\n\n      cellEl.addEventListener('mouseenter', event => this.onCellEnter(event)); // наведене мыши\n      cellEl.addEventListener('mouseleave', event => this.onCellLeave(event)); // убирание мыши\n      cellEl.addEventListener('click', event => this.onCellClick(event));      // клик\n\n      this.boardEl.appendChild(cellEl);\n    }\n\n    // После создания всех ячеек их ссылки сохраняются в массив\n    this.cells = Array.from(this.boardEl.children);\n  }\n\n  /**\n   * Draws positions (with chars) on boardEl\n   *\n   * @param positions array of PositionedCharacter objects\n   */\n  redrawPositions(positions) {\n    for (const cell of this.cells) {\n      cell.innerHTML = '';\n    }\n\n    for (const position of positions) {\n      const cellEl = this.boardEl.children[position.position];\n      const charEl = document.createElement('div');\n      charEl.classList.add('character', position.character.type);\n\n      const healthEl = document.createElement('div');\n      healthEl.classList.add('health-level');\n\n      const healthIndicatorEl = document.createElement('div');\n      healthIndicatorEl.classList.add('health-level-indicator', `health-level-indicator-${calcHealthLevel(position.character.health)}`);\n      healthIndicatorEl.style.width = `${position.character.health}%`;\n      healthEl.appendChild(healthIndicatorEl);\n\n      charEl.appendChild(healthEl);\n      cellEl.appendChild(charEl);\n    }\n  }\n\n  /**\n   * Add listener to mouse enter for cell\n   *\n   * @param callback\n   */\n  addCellEnterListener(callback) {\n    this.cellEnterListeners.push(callback);\n  }\n\n  /**\n   * Add listener to mouse leave for cell\n   *\n   * @param callback\n   */\n  addCellLeaveListener(callback) {\n    this.cellLeaveListeners.push(callback);\n  }\n\n  /**\n   * Add listener to mouse click for cell\n   *\n   * @param callback\n   */\n  addCellClickListener(callback) {\n    this.cellClickListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"New Game\" button click\n   *\n   * @param callback\n   */\n  addNewGameListener(callback) {\n    console.log(\"Adding new game listener...\");\n    this.newGameListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"Save Game\" button click\n   *\n   * @param callback\n   */\n  addSaveGameListener(callback) {\n    console.log(\"Adding save game listener...\");\n    this.saveGameListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"Load Game\" button click\n   *\n   * @param callback\n   */\n  addLoadGameListener(callback) {\n    console.log(\"Adding load game listener...\");\n    this.loadGameListeners.push(callback);\n  }\n\n  onCellEnter(event) {\n    event.preventDefault();\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellEnterListeners.forEach(o => o.call(null, index));\n  }\n\n  onCellLeave(event) {\n    event.preventDefault();\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellLeaveListeners.forEach(o => o.call(null, index));\n  }\n\n  onCellClick(event) {\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellClickListeners.forEach(o => o.call(null, index));\n  }\n\n  onNewGameClick(event) {\n    event.preventDefault();\n    this.newGameListeners.forEach(o => o.call(null));\n  }\n\n  onSaveGameClick(event) {\n    event.preventDefault();\n    this.saveGameListeners.forEach(o => o.call(null));\n  }\n\n  onLoadGameClick(event) {\n    event.preventDefault();\n    this.loadGameListeners.forEach(o => o.call(null));\n  }\n\n  static showError(message) {\n    alert(message);\n  }\n\n  static showMessage(message) {\n    alert(message);\n  }\n\n  selectCell(index, color = 'yellow') {\n    this.deselectCell(index);\n    this.cells[index].classList.add('selected', `selected-${color}`);\n  }\n\n  deselectCell(index) {\n    const cell = this.cells[index];\n    cell.classList.remove(...Array.from(cell.classList)\n      .filter(o => o.startsWith('selected')));\n  }\n\n  showCellTooltip(message, index) {\n    this.cells[index].title = message;\n  }\n\n  hideCellTooltip(index) {\n    this.cells[index].title = '';\n  }\n\n  showDamage(index, damage) {\n    // if (typeof index !== 'number' || index < 0 || index >= this.boardSize ** 2) {\n    //   console.error(`Некорректный индекс для showDamage: ${index}`);\n    // };\n\n    return new Promise((resolve) => {\n      const cell = this.cells[index];\n      const damageEl = document.createElement('span');\n      damageEl.textContent = damage;\n      damageEl.classList.add('damage');\n      cell.appendChild(damageEl);\n\n      damageEl.addEventListener('animationend', () => {\n        cell.removeChild(damageEl);\n        resolve();\n      });\n    });\n  }\n\n  setCursor(cursor) {\n    this.boardEl.style.cursor = cursor;\n  }\n\n  checkBinding() {\n    if (this.container === null) {\n      throw new Error('GamePlay not bind to DOM');\n    }\n  }\n}\n","export default class GameState {\n  constructor() {\n    this.positions = [];   // Массив объектов, где каждый хранит персонажа и его позицию на поле\n    this.occupiedPositions = new Set(); // Множество позиций поля, которые заняты персонажам\n    this.playerMove = true; // Ход игрока\n    this.level = 1;        // Текущий уровень\n    this.userStats = 0;   // Очки пользователя\n  }\n\n  // Восстановления состояния игры:\n  //   создание экземпляра GameState на основе переданного объекта (object);\n  //   копируем все свойства из object в экземпляр gameState (Object.assign);\n  //   восстанавливаем множество (Set) обратно из массива:\n  //     occupiedPositions в GameState хранится как Set, а не массив, но\n  //     при сохранении игры объект Set преобразуется в массив, так как\n  //     JSON.stringify не поддерживает сериализацию Set\n  static from(object) {\n    if (typeof object === 'object' && object !== null) {\n      const gameState = new GameState();\n      Object.assign(gameState, object);\n      gameState.occupiedPositions = new Set(object.occupiedPositions || []);\n      return gameState;\n    }\n    return null;\n  }\n}\n","const themes = {\n  prairie: 'prairie',\n  desert: 'desert',\n  arctic: 'arctic',\n  mountain: 'mountain',\n};\n\nexport default themes;\n","/**\n * Формирует экземпляр персонажа из массива allowedTypes со\n * случайным уровнем от 1 до maxLevel\n *\n * @param allowedTypes массив классов\n * @param maxLevel максимальный возможный уровень персонажа\n * @returns генератор, который при каждом вызове\n * возвращает новый экземпляр класса персонажа\n *\n */\nexport function* characterGenerator(allowedTypes, maxLevel) {\n  // TODO: write logic here\n  while (true) {\n    const randomTypeIndex = Math.floor(Math.random() * allowedTypes.length);\n    const randomLevel = Math.floor(Math.random() * maxLevel) + 1;\n    yield new allowedTypes[randomTypeIndex](randomLevel);\n  }\n}\n\n/**\n * Формирует массив персонажей на основе characterGenerator\n * @param allowedTypes массив классов\n * @param maxLevel максимальный возможный уровень персонажа\n * @param characterCount количество персонажей, которое нужно сформировать\n * @returns экземпляр Team, хранящий экземпляры персонажей. Количество персонажей в команде - characterCount\n * */\nexport function generateTeam(allowedTypes, maxLevel, characterCount) {\n  // TODO: write logic here\n  const team = [];\n  const generator = characterGenerator(allowedTypes, maxLevel);\n\n  while (team.length < characterCount) {\n    const character = generator.next().value;\n    team.push(character);\n  }\n\n  return team;\n}\n","/**\n * Базовый класс, от которого наследуются классы персонажей\n * @property level - уровень персонажа, от 1 до 4\n * @property attack - показатель атаки\n * @property defence - показатель защиты\n * @property health - здоровье персонажа\n * @property type - строка с одним из допустимых значений:\n * swordsman\n * bowman\n * magician\n * daemon\n * undead\n * vampire\n */\nexport default class Character {\n  constructor(level, type = 'generic') {\n    this.level = level;\n    this.attack = 0;\n    this.defence = 0;\n    this.health = 50;\n    this.type = type;\n\n    // TODO: выбросите исключение, если кто-то использует \"new Character()\"\n    if (new.target === Character) {\n      throw new Error('Cannot instantiate Character directly');\n    }\n  }\n}\n","import Character from './Character';\n\nexport default class PositionedCharacter {\n  constructor(character, position) {\n    if (!(character instanceof Character)) {\n      throw new Error('character must be instance of Character or its children');\n    }\n\n    if (typeof position !== 'number') {\n      throw new Error('position must be a number');\n    }\n\n    this.character = character;\n    this.position = position;\n  }\n}\n","const cursors = {\n  auto: 'auto',\n  pointer: 'pointer',\n  crosshair: 'crosshair',\n  notallowed: 'not-allowed',\n};\n\nexport default cursors;\n","import Character from '../Character';\r\n\r\n\r\nexport default class Bowman extends Character {\r\n  constructor(level) {\r\n    super(level, 'bowman');\r\n    this.attack = 25;\r\n    this.defence = 25;\r\n  }\r\n}\r\n","import Character from '../Character';\r\n\r\nexport default class Swordsman extends Character {\r\n  constructor(level) {\r\n    super(level, 'swordsman');\r\n    this.attack = 40;\r\n    this.defence = 10;\r\n  }\r\n}\r\n","import Character from '../Character';\r\n\r\nexport default class Magician extends Character {\r\n  constructor(level) {\r\n    super(level, 'magician');\r\n    this.attack = 10;\r\n    this.defence = 40;\r\n  }\r\n}\r\n","import Character from '../Character';\r\n\r\nexport default class Vampire extends Character {\r\n  constructor(level) {\r\n    super(level, 'vampire');\r\n    this.attack = 25;\r\n    this.defence = 25;\r\n  }\r\n}\r\n","import Character from '../Character';\r\n\r\nexport default class Undead extends Character {\r\n  constructor(level) {\r\n    super(level, 'undead');\r\n    this.attack = 40;\r\n    this.defence = 10;\r\n  }\r\n}\r\n","import Character from '../Character';\r\n\r\nexport default class Daemon extends Character {\r\n  constructor(level) {\r\n    super(level, 'daemon');\r\n    this.attack = 10;\r\n    this.defence = 10;\r\n  }\r\n}\r\n","import GamePlay from './GamePlay';\n\nimport GameState from './GameState';\n\nimport themes from './themes';\nimport { generateTeam } from './generators';\nimport PositionedCharacter from './PositionedCharacter';\nimport cursors from './cursors';\nimport Character from './Character';\n\nimport Bowman from './characters/Bowman';\nimport Swordsman from './characters/Swordsman';\nimport Magician from './characters/Magician';\nimport Vampire from './characters/Vampire';\nimport Undead from './characters/Undead';\nimport Daemon from './characters/Daemon';\n\nconst characterTypeMap = {\n  bowman: Bowman,\n  swordsman: Swordsman,\n  magician: Magician,\n  vampire: Vampire,\n  undead: Undead,\n  daemon: Daemon,\n};\n\nexport default class GameController {\n  constructor(gamePlay, stateService) {\n    this.gamePlay = gamePlay;\n    this.stateService = stateService;\n    this.gameState = new GameState();\n    this.boardSize = 8;\n\n    this.playerTeam = [];\n    this.enemyTeam = [];\n    this.maxScore = 0;\n    this.scoresReset = false;\n    this._initializeBaseState();\n  }\n\n  _initializeGame(isNewGame = false) {\n    this._initializeBaseState();\n\n    this.isGameOver = false;\n    this.updateScoreDisplay();\n\n    if (isNewGame) {\n      this.resetCurrentScore();\n    // } else {\n    //   localStorage.clear();\n    }\n\n    this.playerTeam = [];\n    this.enemyTeam = [];\n    this.createTeams(2, 2);\n    this.resetAllCharacters();\n\n    console.log('stateService:', this.stateService);\n\n    let savedState;\n    try {\n      savedState = this.stateService.load();\n    } catch (error) {\n      console.error('Ошибка загрузки состояния:', error);\n      savedState = null;\n    }\n\n    console.log('Состояние после загрузки:', savedState);\n\n    try {\n      this.maxScore = savedState.maxScore;\n    } catch (error) {\n      console.error('Ошибка загрузки рекорда:', error);\n      this.maxScore = 0;\n    };\n    console.log(`Максимальный счёт после загрузки: ${this.maxScore}`);\n    this.updateScoreDisplay();\n\n\n    const scoreBoard = document.querySelector('.score-board');\n    let scoreBoardContent = '';\n    if (scoreBoard) {\n      scoreBoardContent = scoreBoard.outerHTML;\n      scoreBoard.remove();\n    }\n\n    console.log('Создание новой игры...');\n\n    this.gamePlay.drawUi(themes.prairie);\n    if (scoreBoardContent) {\n      this.gamePlay.container.insertAdjacentHTML('beforeend', scoreBoardContent);\n    }\n\n    this.redrawPositions();\n    this.addEventListeners();\n    this.addButtonListeners();\n  }\n\n  init() {\n    console.log('start');\n    this.createScoreBoard();\n    this._initializeGame(false); // false - это не новая игра\n  }\n\n  initNewGame() {\n    GamePlay.showMessage('Новая игра началась!');\n    this._initializeGame(true); // true - это новая игра\n  }\n\n  _initializeBaseState() {\n    this.positions = [];\n    this.occupiedPositions = [];\n    this.selectedCharacter = null;\n    this.currentThemeIndex = 0;\n    this.currentTurn = 'player';\n    this.currentScore = 0;\n  }\n\n  resetAllCharacters() {\n    this.positions.forEach((positionedCharacter) => {\n      const character = positionedCharacter.character;\n\n      // Сбрасываем свойства для каждого персонажа\n      character.level = 1;\n      character.health = 50;\n\n      switch (character.constructor) {\n        case Bowman:\n          character.attack = 25;\n          character.defence = 25;\n          break;\n        case Swordsman:\n          character.attack = 40;\n          character.defence = 10;\n          break;\n        case Magician:\n          character.attack = 10;\n          character.defence = 40;\n          break;\n        case Vampire:\n          character.attack = 25;\n          character.defence = 25;\n          break;\n        case Undead:\n          character.attack = 40;\n          character.defence = 10;\n          break;\n        case Daemon:\n          character.attack = 10;\n          character.defence = 10;\n          break;\n        default:\n          throw new Error('Unknown character type');\n      }\n    });\n  }\n\n  /**\n   * Генерирует команды игрока и соперника\n   */\n  createTeams(playerCount, enemyCount) {\n    this.playerTeam = this.placeTeam(\n      generateTeam([Bowman, Swordsman, Magician], 1, playerCount),\n      [0, 1]\n    );\n\n    this.enemyTeam = this.placeTeam(\n      generateTeam([Vampire, Undead, Daemon], 1, enemyCount),\n      [6, 7]\n    );\n\n    this.positions = [...this.playerTeam, ...this.enemyTeam];\n\n    console.log('this.positions =', this.positions);\n    console.log('this.enemyTeam =', this.enemyTeam);\n  }\n\n  /**\n   * Обновление массива занятых позиций\n   */\n  updateOccupiedPositions() {\n    this.occupiedPositions = this.positions.map((pos) => pos.position);\n  }\n\n   /**\n   * Размещает команду на указанных столбцах\n   * @param {Array} characters - Массив персонажей\n   * @param {Array} columns - Столбцы для размещения персонажей\n   * @returns {Array} Массив PositionedCharacter\n   */\n  placeTeam(characters, columns) {\n    return characters.map((character) => {\n      const position = this.getRandomPosition(columns);\n      const positionedCharacter = new PositionedCharacter(character, position);\n      this.positions.push(positionedCharacter);\n      this.updateOccupiedPositions();\n      console.log('Placed character:', positionedCharacter);\n      return positionedCharacter;\n    });\n  }\n\n  /**\n   * Возвращает случайную доступную позицию.\n   * @param {Array} columns - Столбцы для выбора.\n   * @returns {number} Случайная позиция.\n   */\n  getRandomPosition(columns) {\n    const positions = this.generatePositions(columns);\n    let position;\n    do {\n      position = positions.pop();\n    } while (this.occupiedPositions.includes(position));\n    return position;\n  }\n\n  /**\n   * Генерирует массив доступных позиций на поле\n   * @param {Array} columns - Столбцы для размещения\n   * @returns {Array} Массив доступных позиций\n   */\n  generatePositions(columns) {\n    const positions = [];\n    for (let i = 0; i < this.boardSize; i++) {\n      columns.forEach((column) => {\n        positions.push(i * this.boardSize + column);\n      });\n    }\n    return positions.sort(() => Math.random() - 0.5);\n  }\n\n  levelUpCharacter(character, levels = 1) {\n    for (let i = 0; i < levels; i++) {\n      console.log('повышаем:', character.type);\n      console.log(`вх. показатели: 🎖${character.level} ⚔${character.attack} 🛡${character.defence} ❤${character.health}`);\n\n      character.level += 1;\n\n      // Повышение показателей атаки/защиты:\n      character.attack = Math.max(\n            character.attack,\n            Math.round(character.attack * (80 + character.health) / 100)\n        );\n\n      character.defence = Math.max(\n        character.defence,\n        character.defence * (80 + character.health) / 100\n      );\n\n      // Показатель health приводится к значению: текущий уровень + 80 (но не более 100).\n      character.health = Math.min(100, character.level + 80);\n\n      console.log(`вых. показатели: 🎖${character.level} ⚔${character.attack} 🛡${character.defence} ❤${character.health}`);\n\n    }\n  }\n\n  /**\n   * Отображаем всех персонажей на игровом поле\n   */\n  redrawPositions() {\n    if (this.isGameOver) {\n      console.log('Игра завершена. Перерисовка заблокирована.');\n      return;\n    }\n\n    if (this.checkGameOver()) {  // здесь обновляется this.enemyTeam и this.playerTeam\n      return;\n    }\n\n    console.log('Перерисовка позиций. Текущие позиции:', this.positions);\n    this.gamePlay.redrawPositions(this.positions);\n\n    const scoreBoard = document.querySelector('.score-board');\n    if (scoreBoard && !document.body.contains(scoreBoard)) {\n      console.warn('.score-board был удалён, добавляем обратно.');\n      this.gamePlay.container.appendChild(scoreBoard);\n    }\n    console.log('Вызов updateScoreDisplay из redrawPositions');\n    this.updateCurrentScore(); // Обновляем счёт после каждого хода\n\n    // if (this.checkGameOver()) {\n    //   return;\n    // }\n  }\n\n  checkGameOver() {\n    console.log('<<<  Проверка завершения игры  >>>');\n\n    this.enemyTeam = this.positions.filter((pos) =>\n      this.enemyTeam.some((enemy) => enemy.character === pos.character)\n    );\n\n    this.playerTeam = this.positions.filter((pos) =>\n      this.playerTeam.some((player) => player.character === pos.character)\n    );\n\n    if (this.enemyTeam.length === 0 && this.playerTeam.length > 0) {\n\n        if (this.currentThemeIndex === 3) {\n          console.log('Игра завершена, обновляем рекорд');\n\n          if (this.currentScore > this.maxScore) {\n            console.log(`Новый рекорд! Старый рекорд: ${this.maxScore}, новый: ${this.currentScore}`);\n            this.maxScore = this.currentScore;\n            this.saveMaxScore();\n          }\n\n          //this.updateCurrentScore(); // Финальный пересчёт очков\n          //this.updateMaxScore(); // Обновление рекорда\n          this.updateScoreDisplay();\n          GamePlay.showMessage('Поздравляем! Вы завершили все уровни!');\n          this.blockGameField();\n          this.isGameOver = true;\n          return true;\n        }\n        GamePlay.showMessage('Раунд завершен, обновляем текущий счёт. Переход на следующий уровень!');\n        this.updateCurrentScore();\n        this.updateScoreDisplay();\n        this.startNextLevel();\n        return true;\n    }\n    if (this.playerTeam.length === 0) {\n      console.log('Игра завершена, игрок проиграл.');\n      this.updateCurrentScore(); // Пересчёт очков при проигрыше\n      GamePlay.showMessage('Вы проиграли. Игра окончена!');\n      this.blockGameField();\n      this.isGameOver = true;\n      return true;\n    }\n    return false; // раунд продолжается, игра не завершена\n\n  }\n\n  blockGameField() {\n    try {\n        this.removeCellClickListener();\n        this.removeCellEnterListener();\n        this.removeCellLeaveListener();\n\n        console.log('Игровое поле заблокировано');\n\n        // Деактивируем кнопки \"Save\" и \"Load\"\n        this.saveGameEl.disabled = true;\n        this.loadGameEl.disabled = true;\n\n        // Оставляем активной только кнопку \"New Game\"\n        this.newGameEl.disabled = false;\n\n    } catch (err) {\n        console.error('Ошибка блокировки игрового поля:', err.message);\n    }\n  }\n\n  updateCurrentScore() {\n    console.log('Пересчёт текущего счёта');\n    console.log('Команда игрока:', this.playerTeam, '!! selectedCharacter??', this.selectedCharacter);\n    this.currentScore = this.playerTeam.reduce(\n      (acc, positionedCharacter) => acc + Math.round(positionedCharacter.character.health),\n      0\n    );\n    console.log(`Обновлённый текущий счёт: ${this.currentScore}`);\n  }\n\n  updateMaxScore() {\n    if (this.currentScore > this.maxScore) {\n      console.log(`Обновление рекорда: старый ${this.maxScore}, новый ${this.currentScore}`);\n      this.maxScore = this.currentScore;\n      this.saveMaxScore();\n    }\n  }\n\n  saveMaxScore() {\n    const savedState = this.stateService.load() || {};\n    savedState.maxScore = this.maxScore;\n    this.stateService.save(savedState);\n  }\n\n  resetCurrentScore() {\n    this.currentScore = 0;\n    if (!this.scoresReset) { // Проверка, сбрасывались ли счётчики ранее\n      console.log('Попытка сбросить счётчики...');\n      this.scoresReset = true; // Устанавливаем флаг\n      const recordReset = confirm('Вы хотите сбросить рекорд?')\n      if (recordReset) {\n        this.maxScore = 0; // Сброс рекорда\n        localStorage.clear(); // Очистка localStorage\n        console.log('Счётчики успешно сброшены.');\n      }\n      //this.updateScoreDisplay(); // Обновляем отображение\n    }\n  }\n\n  updateScoreDisplay() {\n    console.log('Вызов updateScoreDisplay');\n\n    if (!this.gamePlay.container) {\n      console.error('gamePlay.container is not defined.');\n      return;\n    }\n\n    let scoreElement = document.querySelector('.score-board');\n    if (!scoreElement) {\n      scoreElement = document.createElement('div');\n      scoreElement.classList.add('score-board');\n      // scoreElement.textContent = `Рекорд: ${this.maxScore}, текущий счёт: ${this.currentScore}`;\n      // this.gamePlay.container.appendChild(scoreElement);\n    // } else {\n    //   scoreElement.textContent = `Рекорд: ${this.maxScore}, текущий счёт: ${this.currentScore}`;\n    }\n\n    const currentScoreElement = document.querySelector('.current-score');\n    const maxScoreElement = document.querySelector('.max-score');\n    console.log(`Текущий счёт: ${this.currentScore}`);\n    console.log(`Рекорд: ${this.maxScore}`);\n\n    if (currentScoreElement) {\n      currentScoreElement.textContent = `Текущий счёт: ${this.currentScore}`;\n    }\n\n    if (maxScoreElement) {\n      maxScoreElement.textContent = `Рекорд: ${this.maxScore}`;\n    }\n  }\n\n  // Добавить в класс GameController\n  createScoreBoard() {\n    // Проверяем, есть ли уже score-board, чтобы избежать дублирования\n    if (document.querySelector('.score-board')) return;\n\n    // Создаём контейнер для счёта\n    const scoreBoard = document.createElement('div');\n    scoreBoard.classList.add('score-board');\n\n    // Создаём элемент для текущего счёта\n    const currentScore = document.createElement('div');\n    currentScore.classList.add('current-score');\n    currentScore.textContent = 'Текущий счёт: 0';\n\n    // Создаём элемент для рекорда\n    const maxScore = document.createElement('div');\n    maxScore.classList.add('max-score');\n    maxScore.textContent = 'Рекорд: 0';\n\n    // Добавляем элементы в контейнер\n    scoreBoard.appendChild(currentScore);\n    scoreBoard.appendChild(maxScore);\n\n    // Вставляем контейнер в игровой интерфейс\n    this.gamePlay.container.insertAdjacentElement('afterbegin', scoreBoard);\n  }\n\n\n  onEnemyDefeated(enemyCharacter) {\n    // Логика уничтожения врага\n    const enemyIndex = this.enemyTeam.indexOf(enemyCharacter);\n    if (enemyIndex !== -1) {\n      this.enemyTeam.splice(enemyIndex, 1);\n      this.currentScore += 1; // Увеличиваем текущий счёт\n      this.updateScoreDisplay(); // Обновляем отображение\n    }\n\n    // Проверка завершения раунда\n    if (this.enemyTeam.length === 0) {\n      this.endRound();\n    }\n  }\n\n  endRound() {\n    // Обновление рекорда, если текущий счёт больше\n    if (this.currentScore > this.maxScore) {\n      this.maxScore = this.currentScore;\n    }\n\n    this.updateScoreDisplay(); // Обновить отображение после раунда\n\n    // Запуск нового раунда\n    GamePlay.showMessage('Раунд завершён! Новый раунд начинается...');\n    this.createTeams(2, 2); // Создаём новые команды\n    this.resetAllCharacters();\n    this.redrawPositions();\n  }\n\n  removeCellClickListener() {\n    this.gamePlay.boardEl.removeEventListener('click', this.onCellClick);\n  }\n\n  removeCellEnterListener() {\n    // true для захвата событий\n    this.gamePlay.boardEl.removeEventListener('mouseenter', this.onCellEnter, true);\n  }\n\n  removeCellLeaveListener() {\n    // true для захвата событий\n    this.gamePlay.boardEl.removeEventListener('mouseleave', this.onCellLeave, true);\n  }\n\n  trackMaxScore(currentScore) {\n    const savedState = this.stateService.load();\n    const maxScore = savedState?.maxScore || 0;\n    this.stateService.save({ ...savedState, maxScore: Math.max(maxScore, currentScore) });\n  }\n\n  calculateCurrentScore() {\n      return this.playerTeam.reduce((acc, positionedCharacter) => acc + positionedCharacter.character.level * 10, 0);\n  }\n\n  levelUpCharacters() {\n    this.playerTeam.forEach((positionedCharacter) => {\n      this.levelUpCharacter(positionedCharacter.character);\n    });\n  }\n\n  startNextLevel() {\n    // Сохраняем текущий элемент .score-board\n    const scoreBoard = document.querySelector('.score-board');\n    let scoreBoardContent = '';\n    if (scoreBoard) {\n      scoreBoardContent = scoreBoard.outerHTML; // Сохраняем HTML для восстановления\n      scoreBoard.remove(); // Удаляем из DOM временно\n    }\n\n    if (this.selectedCharacter) {\n      this.gamePlay.deselectCell(this.selectedCharacter.position);\n      this.selectedCharacter = null;\n    }\n\n    this.currentThemeIndex = (this.currentThemeIndex + 1) % Object.keys(themes).length;\n    const theme = Object.values(themes)[this.currentThemeIndex];\n    this.gamePlay.drawUi(theme);\n\n    //  Определяем размер команд для текущего уровня\n    const level = this.currentThemeIndex + 1; // Индекс темы начинается с 0, поэтому добавляем 1\n    let playerCount, enemyCount;\n    if (level === 2) {\n        playerCount = 3;\n        enemyCount = 3;\n    } else if (level >= 3) {\n        playerCount = 5;\n        enemyCount = 5;\n    } else {\n        playerCount = 2;\n        enemyCount = 2;\n    }\n    // 1. Повышение уровня \"живых\" персонажей\n    this.playerTeam = this.playerTeam.map((positionedCharacter) => {\n      this.levelUpCharacter(positionedCharacter.character, 1); // Повышаем уровень на 1\n      return positionedCharacter;\n    });\n\n    // 2. Генерация новых персонажей с уровнем 1\n    const newPlayerCharacters = generateTeam(\n      [Bowman, Swordsman, Magician], 1, playerCount - this.playerTeam.length\n    );\n    const newEnemyCharacters = generateTeam(\n        [Vampire, Undead, Daemon], 1, enemyCount);\n\n    // 3. Добавление новых персонажей в команды\n    this.playerTeam = [\n        ...this.playerTeam,\n        ...this.placeTeam(newPlayerCharacters, [0, 1]),\n    ];\n    this.enemyTeam = [\n        ...this.enemyTeam,\n        ...this.placeTeam(newEnemyCharacters, [6, 7]),\n    ];\n\n    this.positions = [...this.playerTeam, ...this.enemyTeam];\n\n    // Восстанавливаем элемент .score-board\n    if (scoreBoardContent) {\n      this.gamePlay.container.insertAdjacentHTML('beforeend', scoreBoardContent);\n    }\n\n    this.redrawPositions();\n    this.addButtonListeners();\n    this.updateScoreDisplay();\n    this.currentTurn = 'player';\n  }\n\n  /**\n   * Форматирует информацию о персонаже и вывод иконок-эмодзи\n   * @param {Object} character - Объект персонажа\n   * @returns {string} Отформатированная строка с информацией\n   */\n  formatCharacterInfo(character) {\n    return `🎖${character.level} ⚔${character.attack} 🛡${character.defence} ❤${character.health}`;\n  }\n\n  /**\n   * Перемещение персонажа\n   */\n  moveCharacter(positionedCharacter, newPosition) {\n    // Удаляем старую позицию из occupiedPositions\n    this.occupiedPositions = this.occupiedPositions.filter(\n      (pos) => pos !== positionedCharacter.position\n    );\n\n    // Обновляем позицию персонажа\n    positionedCharacter.position = newPosition;\n\n    // Добавляем новую позицию в occupiedPositions\n    this.occupiedPositions.push(newPosition);\n\n    // Обновляем массив positions\n    this.updateOccupiedPositions();\n  }\n\n  /**\n   * Логика атаки в классе GameController, с использованием метода showDamage из GamePlay.\n   * @param {*} attacker\n   * @param {*} targetPosition\n   * @param {string} turn - Текущий ход ('player' или 'enemy').\n   */\n  async attack(attacker, targetPosition, turn = 'player') {\n    console.log(`async attack Атака: ${attacker.type} атакует клетку ${targetPosition} (${turn} ход)`);\n\n    const target = this.positions.find((pos) => pos.position === targetPosition);\n    if (!target) {\n      throw new Error('attack: Цель не найдена');\n    }\n\n    const damage = Math.round(\n      Math.max(attacker.attack - target.character.defence, attacker.attack * 0.1) * 10) / 10;\n\n    console.log('async attack: вызов showDamage:', { targetPosition, damage, attacker, target });\n    await this.gamePlay.showDamage(targetPosition, damage);\n    console.log('showDamage выполнен.');\n\n    target.character.health -= damage;\n\n    if (target.character.health <= 0) {\n      console.log(`async attack Персонаж ${target.character.type} уничтожен на позиции ${targetPosition}`);\n\n      // Удаляем \"убитого\" персонажа\n      this.positions = this.positions.filter((pos) => pos !== target);\n      this.updateOccupiedPositions();\n\n      // if (this.isEnemy(target.character)) {\n        this.enemyTeam = this.enemyTeam.filter((enemy) => enemy !== target);\n      // } else {\n        this.playerTeam = this.playerTeam.filter((player) => player !== target);\n      // }\n      this.selectedCharacter = null;\n    }\n\n    console.log('async attack До вызова redrawPositions');\n    this.redrawPositions();\n    console.log('async attack После вызова redrawPositions');\n  }\n\n  /**\n   Логика хода компьютера: выбирается ближайший персонаж игрока.\n   */\n  async enemyTurn() {\n    console.log('async enemyTurn Начало хода врага');\n\n    if (this.enemyTeam.length === 0) {\n      console.log('Нет доступных врагов для хода.');\n      return;\n    }\n\n    // Находим всех персонажей игрока\n    const playerCharacters = this.positions.filter((pos) =>\n      this.playerTeam.some((playerPos) => playerPos === pos)\n    );\n\n    console.log(`async enemyTurn Находим всех персонажей игрока: ${playerCharacters.map((pc) => pc.character.type)}`);\n\n    if (playerCharacters.length === 0) {\n      GamePlay.showMessage('Все персонажи игрока уничтожены. Вы проиграли.');\n      this.isGameOver = true;\n      return;\n    }\n\n    // Стратегия: атака ближайшего игрока\n    let bestAttack = null;\n\n    for (const enemy of this.enemyTeam) {\n      const attackRange = this.getAttackRange(enemy.character, enemy.position, false);\n      for (const player of playerCharacters) {\n        if (attackRange.includes(player.position)) {\n          const distance = Math.abs(enemy.position - player.position);\n          if (!bestAttack || distance < bestAttack.distance) {\n            bestAttack = { enemy, target: player, distance };\n          }\n        }\n      }\n    }\n\n    if (bestAttack) {\n      console.log(`async enemyTurn Враг атакует: ${bestAttack.enemy.character.type} на позиции ${bestAttack.enemy.position} атакует игрока ${bestAttack.target.character.type} на позиции ${bestAttack.target.position}`);\n      await this.attack(bestAttack.enemy.character, bestAttack.target.position, 'enemy');\n      return;\n    //}\n    } else {\n      console.log('async enemyTurn Враг перемещается');\n      const enemyToMove = this.enemyTeam[0];\n      const moveRange = this.getMoveRange(enemyToMove.character, enemyToMove.position);\n      if (moveRange.length > 0) {\n        const targetPosition = moveRange[0];\n        console.log(\n          `async enemyTurn Враг перемещается с позиции ${enemyToMove.position} на позицию ${targetPosition}`\n        );\n        this.moveCharacter(enemyToMove, targetPosition);\n        this.redrawPositions();\n      }\n    }\n\n    console.log('--> async enemyTurn --> Передаём ход игроку');\n    this.currentTurn = 'player';\n  }\n\n  /**\n   * Обработчик событий на игровом поле\n   */\n  addEventListeners() {\n    this.gamePlay.addCellClickListener(this.onCellClick.bind(this));\n    this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this));\n    this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this));\n  }\n\n  onCellClick = async (index) => {\n    if (this.isGameOver) {\n      console.log('onCellClick: Игра завершена, действия заблокированы.');\n      return;\n    }\n\n    console.log(`onCellClick Клик по клетке с индексом ${index}`);\n    const positionedCharacter = this.positions.find((pos) => pos.position === index);\n\n    // Если персонажа нет в выбранной ячейке, но есть выбранный ранее игрок ---> попытка хода\n    if (!positionedCharacter && this.selectedCharacter) {\n      const moveRange = this.getMoveRange(this.selectedCharacter.character, this.selectedCharacter.position);\n\n      // Если клик в пределах допустимого диапазона перемещения --> ход\n      if (moveRange.includes(index)) {\n        this.gamePlay.deselectCell(this.selectedCharacter.position);\n        this.moveCharacter(this.selectedCharacter, index);\n        this.selectedCharacter = null;\n        this.redrawPositions();\n\n        // Переход хода к врагу\n        this.currentTurn = 'enemy';\n        console.log(`--> onCellClick --> Ход передан: ${this.currentTurn}`);\n        await this.enemyTurn();\n        return;\n      }\n\n      // клик вне допустимого диапазона  --> сообщение об ошибке\n      GamePlay.showError('Невозможно переместиться на эту клетку.');   // --->  ошибка\n      return;\n    }\n\n    // Если персонажа нет в выбранной ячейке, и нет выбранного ранее игрока\n    if (!positionedCharacter) {\n      GamePlay.showError('В этой ячейке нет персонажа.');\n      return;\n    }\n\n    // Если есть выбранный персонаж\n    const character = positionedCharacter.character;\n    const playerTypes = [Bowman, Swordsman, Magician];\n\n    if (this.selectedCharacter) {\n      const attackRange = this.getAttackRange(this.selectedCharacter.character, this.selectedCharacter.position);\n\n      // Если клик в пределах допустимого диапазона атаки (клик на врага)\n      if (attackRange.includes(index) && this.enemyTeam.some((enemy) => enemy.position === index)) {\n        const attacker = this.selectedCharacter.character;\n        const target = positionedCharacter.character;\n\n        console.log('onCellClick Атака:', {\n          attacker: { ...attacker },\n          target: { ...target },\n          targetIndex: index,\n        });\n\n        const damage = Math.max(attacker.attack - target.defence, attacker.attack * 0.1);\n\n        console.log('onCellClick: вызов showDamage:', { index, damage, attacker, target });\n        await this.gamePlay.showDamage(index, damage);\n        console.log('showDamage выполнен.');\n\n        target.health -= damage;\n\n        if (target.health <= 0) {\n          // Удаляем \"убитого\" персонажа\n          this.positions = this.positions.filter((pos) => pos !== positionedCharacter);\n          console.log('onCellClick убили', target.type, 'this.positions', this.positions);\n          this.updateOccupiedPositions();\n\n          //if (this.isEnemy(target.character)) {\n            this.enemyTeam = this.enemyTeam.filter((enemy) => enemy !== target);\n          //} else {\n            this.playerTeam = this.playerTeam.filter((player) => player !== target);\n          //}\n\n          // if (this.checkGameOver()) {\n          //   return; // Завершаем выполнение, если игра завершена\n          // }\n          console.log('onCellClick До вызова redrawPositions');\n          this.redrawPositions();\n          console.log('onCellClick После вызова redrawPositions');\n          this.checkGameOver()\n          return;\n        }\n\n        console.log('onCellClick До вызова redrawPositions');\n        this.redrawPositions();\n        console.log('onCellClick После вызова redrawPositions');\n\n        this.currentTurn = 'enemy';\n        console.log(`--> onCellClick --> Ход передан: ${this.currentTurn}`);\n        await this.enemyTurn();\n        return;\n      }\n\n      // Если игрок кликает на другого персонажа из своей команды\n      if (playerTypes.includes(character.constructor)) {\n        this.gamePlay.deselectCell(this.selectedCharacter.position);\n        this.selectedCharacter = positionedCharacter; // Обновить выбранного персонажа\n        this.gamePlay.selectCell(index, 'yellow');\n        console.log(`Вы переключились на персонажа: ${character.constructor.name} на позиции ${index}`);\n        return;\n      }\n\n      GamePlay.showError('Невозможно выполнить действие.');\n      return;\n    }\n\n    // Проверка принадлежности персонажа игроку\n    if (!playerTypes.includes(character.constructor)) {\n      GamePlay.showError('Этот персонаж не принадлежит вам.');\n      return;\n    }\n\n    // Если персонаж игрока найден, снять предыдущее выделение и выделить текущий\n    if (this.selectedCharacter) {\n      this.gamePlay.deselectCell(this.selectedCharacter.position);\n    }\n\n    // Сохраняем выделенного персонажа\n    this.selectedCharacter = positionedCharacter;\n    this.gamePlay.selectCell(index, 'yellow');\n\n    console.log(`Вы выбрали персонажа: ${character.constructor.name} на позиции ${index}`);\n  }\n\n  onCellEnter(index) {\n    if (this.isGameOver) {\n      console.log('onCellClick: Игра завершена, действия заблокированы.');\n      return;\n    }\n    // console.log(`Наведение мыши на клетку с индексом ${index}`);\n    const positionedCharacter = this.positions.find((pos) => pos.position === index);\n    const { selectedCharacter } = this;\n\n    // Если в ячейке есть персонаж\n    if (positionedCharacter) {\n      const characterInfo = this.formatCharacterInfo(positionedCharacter.character);\n      this.gamePlay.showCellTooltip(characterInfo, index);\n\n      const isPlayerCharacter = this.playerTeam.some((pos) => pos.position === index);\n\n      if (isPlayerCharacter) {\n        this.gamePlay.setCursor(cursors.pointer);\n      } else if (selectedCharacter) {\n        const attackRange = this.getAttackRange(selectedCharacter.character, selectedCharacter.position);\n\n        if (attackRange.includes(index)) {\n          this.gamePlay.setCursor(cursors.crosshair);\n          this.gamePlay.selectCell(index, 'red');\n        } else {\n          this.gamePlay.setCursor(cursors.notallowed);\n        }\n      }\n      return;\n    }\n\n    // Если персонажа в ячейке нет, но есть выбранный персонаж\n    if (selectedCharacter) {\n      const moveRange = this.getMoveRange(selectedCharacter.character, selectedCharacter.position);\n\n      if (moveRange.includes(index)) {\n        this.gamePlay.setCursor(cursors.pointer);\n        this.gamePlay.selectCell(index, 'green');\n      } else {\n        this.gamePlay.setCursor(cursors.notallowed);\n      }\n\n      // Обеспечиваем сохранение жёлтой подсветки\n      this.gamePlay.selectCell(selectedCharacter.position, 'yellow');\n    } else {\n      this.gamePlay.setCursor(cursors.auto);\n    }\n  }\n\n  onCellLeave(index) {\n    // console.log(`Уход мыши с клетки с индексом ${index}`);\n    this.gamePlay.hideCellTooltip(index);\n    this.gamePlay.deselectCell(index);\n  }\n\n  /**\n   * Обработчик событий на кнопках\n   */\n  addButtonListeners() {\n    this.newGameEl = document.querySelector('[data-id=\"action-restart\"]');\n    this.saveGameEl = document.querySelector('[data-id=\"action-save\"]');\n    this.loadGameEl = document.querySelector('[data-id=\"action-load\"]');\n\n    if (this.newGameEl && this.saveGameEl && this.loadGameEl) {\n        this.newGameEl.addEventListener('click', (event) => this.onNewGameClick(event));\n        this.saveGameEl.addEventListener('click', (event) => this.onSaveGameClick(event));\n        this.loadGameEl.addEventListener('click', (event) => this.onLoadGameClick(event));\n    } else {\n        console.error('Не удалось найти кнопки на странице');\n    }\n  }\n\n  onNewGameClick() {\n    console.log('-------нажата кнопка NewGame------');\n    this.resetCurrentScore();\n    // const currentScore = this.calculateCurrentScore();\n    // this.trackMaxScore(currentScore);\n    const container = document.getElementById('game-container');\n\n    const newGamePlay = new GamePlay();\n    newGamePlay.bindToDOM(container);\n\n    this.gamePlay = newGamePlay;\n    // this._initializeGame(true);\n    this.initNewGame();\n    // this.init();\n  };\n\n  onSaveGameClick() {\n    console.log('------нажата кнопка SaveGame-------');\n\n    const stateToSave = {\n      positions: this.positions.map((pos) => ({\n        position: pos.position,\n          character: {\n            ...pos.character,\n            type: pos.character.constructor.name.toLowerCase(),\n          },\n      })),\n      level: this.currentThemeIndex + 1,\n      playerMove: this.currentTurn === 'player',\n    };\n\n    this.stateService.save(stateToSave);\n    console.log('Сохраняемое состояние:', stateToSave);\n\n    GamePlay.showMessage('Игра сохранена');\n  };\n\n  onLoadGameClick = () => {\n    console.log('------нажата кнопка LoadGame-------');\n    let loadState;\n\n    // Загрузка состояния из stateService\n    try {\n        loadState = this.stateService.load();\n        if (!loadState || !Array.isArray(loadState.positions)) {\n            throw new Error('Сохранённое состояние повреждено или отсутствует');\n        }\n    } catch (err) {\n        GamePlay.showError(`Ошибка загрузки игры: ${err.message}`);\n        return;\n    }\n\n    // Сохранение .score-board\n    const scoreBoard = document.querySelector('.score-board');\n    let scoreBoardContent = '';\n    if (scoreBoard) {\n      scoreBoardContent = scoreBoard.outerHTML; // Сохраняем HTML\n      scoreBoard.remove(); // Удаляем из DOM\n    }\n\n    // Восстановление состояния\n    try {\n        // Преобразование загруженного объекта в экземпляр GameState\n        this.gameState = GameState.from(loadState);\n        console.log('Восстановленное состояние:', this.gameState);\n\n        // Восстановление массива позиций\n        this.positions = this.gameState.positions.map((pos) => {\n            const CharacterClass = characterTypeMap[pos.character.type];\n            if (!CharacterClass) {\n                throw new Error(`Неизвестный тип персонажа: ${pos.character.type}`);\n            }\n            const character = Object.assign(new CharacterClass(), pos.character);\n            return { position: pos.position, character };\n        });\n\n        console.log('Загруженные позиции:', this.positions);\n\n        this.currentScore = loadState.currentScore || 0;\n        // this.currentScore = loadState.userStats || 0;\n        this.maxScore = loadState.maxScore || this.maxScore;\n        // this.maxScore = Math.max(this.maxScore, loadState.maxScore || 0);\n        console.log('Текущий счёт после загрузки:', this.currentScore);\n        console.log('loadState.userStats', loadState.userStats);\n        console.log('Максимальный счёт после загрузки:', this.maxScore);\n\n        // Обновление команд\n        this.playerTeam = this.positions.filter((pos) =>\n            ['bowman', 'swordsman', 'magician'].includes(pos.character.type)\n        );\n        console.log('Команда игрока после загрузки:', this.playerTeam);\n\n        this.enemyTeam = this.positions.filter((pos) =>\n            ['vampire', 'undead', 'daemon'].includes(pos.character.type)\n        );\n        console.log('Команда врага после загрузки:', this.enemyTeam);\n\n        // Восстановление темы через levelToThemeMap\n        // const levelToThemeMap = ['prairie', 'desert', 'arctic', 'mountain'];\n        // const themeKey = levelToThemeMap[this.gameState.level - 1]; // Индекс = уровень - 1\n        // const theme = themes[themeKey];\n        // if (!theme) {\n        //     throw new Error(`Тема для уровня ${this.gameState.level} (${themeKey}) не найдена`);\n        // }\n\n        // Восстанавливаем текущий уровень и индекс темы\n        this.currentThemeIndex = (loadState.level || 1) - 1; // Приводим уровень к индексу темы\n        const theme = Object.values(themes)[this.currentThemeIndex];\n\n        if (!theme) {\n          throw new Error(`Тема для уровня ${loadState.level} не найдена`);\n        }\n        console.log('Тема после загрузки:', theme);\n        console.log('Уровень после загрузки:', this.gameState.level);\n\n        this.gamePlay.drawUi(theme);\n        this.redrawPositions();\n        this.addButtonListeners(); // Повторно привязываем кнопки\n        // Восстановление .score-board\n        if (scoreBoardContent) {\n          this.gamePlay.container.insertAdjacentHTML('beforeend', scoreBoardContent);\n        }\n\n        GamePlay.showMessage('Игра успешно загружена!');\n        this.updateScoreDisplay(); // Обновляем отображение счётчиков\n    } catch (err) {\n        GamePlay.showError(`Ошибка восстановления игры: ${err.message}`);\n    }\n  };\n\n  /**\n * Получить допустимые ходы для персонажа\n * @param {Object} character - Персонаж\n * @param {number} position - Текущая позиция персонажа\n * @returns {Array} Массив индексов допустимых клеток\n */\n  getMoveRange(character, position, log = false) {\n    const distance = this.getMoveDistance(character);\n    if (log) {\n      console.log('для position:', position, 'персонаж:', character, 'distance:', distance);\n    }\n    return this.getRange(position, distance);\n  }\n\n  /**\n   * Получить радиус атаки персонажа\n   * @param {Object} character - Персонаж\n   * @param {number} position - Текущая позиция персонажа\n   * @returns {Array} Массив индексов допустимых клеток для атаки\n   */\n  getAttackRange(character, position) {\n    const distance = this.getAttackDistance(character);\n    return this.getRangeAt(position, distance);\n  }\n\n  /**\n   * Получить радиус для перемещения\n   * Учитывает обновлённые позиции сразу после \"убийства\"\n   * @param {number} position - Текущая позиция\n   * @param {number} distance - Дистанция перемещения\n   * @returns {Array} Массив доступных индексов\n   */\n  getRange(position, distance) {\n    // console.log('Текущие занятые позиции:', this.occupiedPositions);\n\n    const range = [];\n    const boardSize = this.boardSize;\n\n    const startRow = Math.floor(position / boardSize);\n    const startCol = position % boardSize;\n\n    for (let row = 0; row < boardSize; row++) {\n      for (let col = 0; col < boardSize; col++) {\n        const isWithinRange =\n          Math.abs(row - startRow) <= distance &&\n          Math.abs(col - startCol) <= distance &&\n          (Math.abs(row - startRow) === Math.abs(col - startCol) ||\n          row === startRow || col === startCol);\n\n          const index = row * boardSize + col;\n\n          if (isWithinRange && !this.occupiedPositions.includes(index)) {\n            range.push(index); // Исключаем занятые позиции\n          }\n      }\n    }\n    // console.log('Массив индексов для хода:', range, 'position:', position);\n    return range;\n  }\n\n  /**\n   * Получить радиус для атаки (\"квадрат\")\n   * @param {number} position - Текущая позиция\n   * @param {number} distance - Дистанция\n   * @returns {Array} Массив индексов в пределах радиуса\n   */\n  getRangeAt(position, distance) {\n    const attackRange = [];\n    const boardSize = this.boardSize;\n\n    const startRow = Math.floor(position / boardSize);\n    const startCol = position % boardSize;\n\n    const minRow = Math.max(0, startRow - distance);\n    const maxRow = Math.min(boardSize - 1, startRow + distance);\n    const minCol = Math.max(0, startCol - distance);\n    const maxCol = Math.min(boardSize - 1, startCol + distance);\n\n    for (let row = minRow; row <= maxRow; row++) {\n      for (let col = minCol; col <= maxCol; col++) {\n        const index = row * boardSize + col;\n        attackRange.push(index);\n      }\n    }\n\n    // console.log('Массив индексов для атаки:', attackRange, 'position:', position);\n    return attackRange;\n  }\n\n  /**\n   * Получить дистанцию перемещения для типа персонажа\n   * @param {Object} character - Персонаж\n   * @returns {number} Дистанция перемещения\n   */\n  getMoveDistance(character) {\n    switch (character.constructor) {\n      case Swordsman:\n      case Undead:\n        return 4;\n      case Bowman:\n      case Vampire:\n        return 2;\n      case Magician:\n      case Daemon:\n        return 1;\n      default:\n        return 0;\n    }\n  }\n\n  /**\n   * Получить дистанцию атаки для типа персонажа\n   * @param {Object} character - Персонаж\n   * @returns {number} Дистанция атаки\n   */\n  getAttackDistance(character) {\n    switch (character.constructor) {\n      case Swordsman:\n      case Undead:\n        return 1;\n      case Bowman:\n      case Vampire:\n        return 2;\n      case Magician:\n      case Daemon:\n        return 4;\n      default:\n       return 0;\n    }\n  }\n\n  /**\n   * Проверка принадлежности персонажа противнику\n   */\n  isEnemy(character) {\n    return this.enemyTeam.some((pos) => pos.character === character);\n  }\n}\n","/**\n * Entry point of app: don't change this\n */\nimport GamePlay from './GamePlay';\nimport GameController from './GameController';\nimport GameStateService from './GameStateService';\n\nconst gamePlay = new GamePlay();\n// querySelector - находит HTML-элемент с идентификатором game-container в DOM-дереве\n// bindToDOM(container) - привязывает экземпляр GamePlay к указанному контейнеру и\n//           вызывается метод render, чтобы отрисовать интерфейс внутри контейнер:\n//           сохраняем контейнер для работы:\n//                     this.container = container;\n//           вызываем метод, который создаёт/отрисовывает элементы интерфейса:\n//                     this.render();\ngamePlay.bindToDOM(document.querySelector('#game-container'));\n\nconst stateService = new GameStateService(localStorage);\n\nconst gameCtrl = new GameController(gamePlay, stateService);\ngameCtrl.init();\n\n// don't write your code here\n","export default class GameStateService {\n  constructor(storage) {\n    this.storage = storage;\n  }\n\n  save(state) {\n    const savedState = {\n      ...state,\n      maxScore: state.maxScore || 0,\n    };\n    this.storage.setItem('state', JSON.stringify(savedState));\n  }\n\n  load() {\n    try {\n      return JSON.parse(this.storage.getItem('state'));\n    } catch (e) {\n      throw new Error('Invalid state');\n    }\n  }\n}\n"],"names":["___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_IMPORT_2___","___CSS_LOADER_URL_IMPORT_3___","___CSS_LOADER_URL_IMPORT_4___","___CSS_LOADER_URL_IMPORT_5___","___CSS_LOADER_URL_IMPORT_6___","___CSS_LOADER_URL_IMPORT_7___","___CSS_LOADER_URL_IMPORT_8___","___CSS_LOADER_URL_IMPORT_9___","___CSS_LOADER_URL_IMPORT_10___","___CSS_LOADER_URL_IMPORT_11___","___CSS_LOADER_URL_IMPORT_12___","___CSS_LOADER_URL_IMPORT_13___","___CSS_LOADER_URL_IMPORT_14___","___CSS_LOADER_URL_IMPORT_15___","___CSS_LOADER_URL_IMPORT_16___","___CSS_LOADER_URL_IMPORT_17___","___CSS_LOADER_URL_IMPORT_18___","___CSS_LOADER_URL_IMPORT_19___","___CSS_LOADER_URL_IMPORT_20___","___CSS_LOADER_URL_IMPORT_21___","___CSS_LOADER_URL_IMPORT_22___","___CSS_LOADER_URL_IMPORT_23___","___CSS_LOADER_URL_IMPORT_24___","___CSS_LOADER_URL_IMPORT_25___","___CSS_LOADER_URL_IMPORT_26___","___CSS_LOADER_URL_IMPORT_27___","___CSS_LOADER_URL_IMPORT_28___","___CSS_LOADER_URL_IMPORT_29___","___CSS_LOADER_URL_IMPORT_30___","___CSS_LOADER_URL_IMPORT_31___","___CSS_LOADER_URL_IMPORT_32___","___CSS_LOADER_URL_IMPORT_33___","___CSS_LOADER_URL_IMPORT_34___","___CSS_LOADER_URL_IMPORT_35___","___CSS_LOADER_URL_IMPORT_36___","___CSS_LOADER_URL_IMPORT_37___","___CSS_LOADER_URL_IMPORT_38___","___CSS_LOADER_URL_IMPORT_39___","___CSS_LOADER_URL_IMPORT_40___","___CSS_LOADER_URL_IMPORT_41___","___CSS_LOADER_URL_IMPORT_42___","___CSS_LOADER_URL_IMPORT_43___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___CSS_LOADER_URL_REPLACEMENT_2___","___CSS_LOADER_URL_REPLACEMENT_3___","___CSS_LOADER_URL_REPLACEMENT_4___","___CSS_LOADER_URL_REPLACEMENT_5___","___CSS_LOADER_URL_REPLACEMENT_6___","___CSS_LOADER_URL_REPLACEMENT_7___","___CSS_LOADER_URL_REPLACEMENT_8___","___CSS_LOADER_URL_REPLACEMENT_9___","___CSS_LOADER_URL_REPLACEMENT_10___","___CSS_LOADER_URL_REPLACEMENT_11___","___CSS_LOADER_URL_REPLACEMENT_12___","___CSS_LOADER_URL_REPLACEMENT_13___","___CSS_LOADER_URL_REPLACEMENT_14___","___CSS_LOADER_URL_REPLACEMENT_15___","___CSS_LOADER_URL_REPLACEMENT_16___","___CSS_LOADER_URL_REPLACEMENT_17___","___CSS_LOADER_URL_REPLACEMENT_18___","___CSS_LOADER_URL_REPLACEMENT_19___","___CSS_LOADER_URL_REPLACEMENT_20___","___CSS_LOADER_URL_REPLACEMENT_21___","___CSS_LOADER_URL_REPLACEMENT_22___","___CSS_LOADER_URL_REPLACEMENT_23___","___CSS_LOADER_URL_REPLACEMENT_24___","___CSS_LOADER_URL_REPLACEMENT_25___","___CSS_LOADER_URL_REPLACEMENT_26___","___CSS_LOADER_URL_REPLACEMENT_27___","___CSS_LOADER_URL_REPLACEMENT_28___","___CSS_LOADER_URL_REPLACEMENT_29___","___CSS_LOADER_URL_REPLACEMENT_30___","___CSS_LOADER_URL_REPLACEMENT_31___","___CSS_LOADER_URL_REPLACEMENT_32___","___CSS_LOADER_URL_REPLACEMENT_33___","___CSS_LOADER_URL_REPLACEMENT_34___","___CSS_LOADER_URL_REPLACEMENT_35___","___CSS_LOADER_URL_REPLACEMENT_36___","___CSS_LOADER_URL_REPLACEMENT_37___","___CSS_LOADER_URL_REPLACEMENT_38___","___CSS_LOADER_URL_REPLACEMENT_39___","___CSS_LOADER_URL_REPLACEMENT_40___","___CSS_LOADER_URL_REPLACEMENT_41___","___CSS_LOADER_URL_REPLACEMENT_42___","___CSS_LOADER_URL_REPLACEMENT_43___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","p","b","baseURI","self","href","nc","calcTileType","boardSize","totalCells","locals","GamePlay","constructor","container","boardEl","cells","cellClickListeners","cellEnterListeners","cellLeaveListeners","newGameListeners","saveGameListeners","loadGameListeners","bindToDOM","HTMLElement","drawUi","theme","checkBinding","innerHTML","newGameEl","saveGameEl","loadGameEl","addEventListener","event","onNewGameClick","onSaveGameClick","onLoadGameClick","classList","add","cellEl","onCellEnter","onCellLeave","onCellClick","Array","from","children","redrawPositions","positions","cell","position","charEl","character","type","healthEl","healthIndicatorEl","health","width","addCellEnterListener","callback","addCellLeaveListener","addCellClickListener","addNewGameListener","console","log","addSaveGameListener","addLoadGameListener","preventDefault","indexOf","currentTarget","forEach","showError","message","alert","showMessage","selectCell","color","deselectCell","filter","startsWith","showCellTooltip","title","hideCellTooltip","showDamage","damage","Promise","resolve","damageEl","textContent","setCursor","cursor","GameState","occupiedPositions","Set","playerMove","level","userStats","object","gameState","assign","prairie","desert","arctic","mountain","generateTeam","allowedTypes","maxLevel","characterCount","team","generator","randomTypeIndex","Math","floor","random","randomLevel","characterGenerator","next","value","Character","attack","defence","PositionedCharacter","Bowman","super","Swordsman","Magician","Vampire","Undead","Daemon","characterTypeMap","bowman","swordsman","magician","vampire","undead","daemon","gamePlay","stateService","storage","save","state","savedState","maxScore","setItem","load","parse","getItem","localStorage","gameCtrl","playerTeam","enemyTeam","scoresReset","_initializeBaseState","_initializeGame","isNewGame","isGameOver","updateScoreDisplay","resetCurrentScore","createTeams","resetAllCharacters","error","scoreBoard","scoreBoardContent","outerHTML","themes","insertAdjacentHTML","addEventListeners","addButtonListeners","init","createScoreBoard","initNewGame","selectedCharacter","currentThemeIndex","currentTurn","currentScore","positionedCharacter","playerCount","enemyCount","placeTeam","updateOccupiedPositions","pos","characters","columns","getRandomPosition","generatePositions","pop","includes","column","sort","levelUpCharacter","levels","max","round","min","checkGameOver","body","contains","warn","updateCurrentScore","some","enemy","player","saveMaxScore","blockGameField","startNextLevel","removeCellClickListener","removeCellEnterListener","removeCellLeaveListener","disabled","err","reduce","acc","updateMaxScore","confirm","clear","scoreElement","currentScoreElement","maxScoreElement","insertAdjacentElement","onEnemyDefeated","enemyCharacter","enemyIndex","endRound","removeEventListener","trackMaxScore","calculateCurrentScore","levelUpCharacters","keys","values","newPlayerCharacters","newEnemyCharacters","formatCharacterInfo","moveCharacter","newPosition","attacker","targetPosition","turn","find","enemyTurn","playerCharacters","playerPos","pc","bestAttack","attackRange","getAttackRange","distance","abs","enemyToMove","moveRange","getMoveRange","bind","async","playerTypes","targetIndex","name","characterInfo","cursors","getElementById","newGamePlay","stateToSave","toLowerCase","loadState","isArray","CharacterClass","getMoveDistance","getRange","getAttackDistance","getRangeAt","range","startRow","startCol","row","col","minRow","maxRow","minCol","maxCol","isEnemy"],"sourceRoot":""}